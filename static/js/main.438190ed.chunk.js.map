{"version":3,"sources":["utils/employees.js","utils/themes.js","components/Container/index.js","components/Row/index.js","components/Col/index.js","components/Table/index.js","components/Button/index.js","components/Jumbotron/index.js","pages/Home.js","App.js","utils/serviceWorker.js","index.js"],"names":["employees","id","fname","lname","position","themes","Container","props","className","fluid","Row","Col","size","split","map","join","Table","theme","scope","filteredEmployees","filterPosBy","filter","employee","sort","first","second","orderBy","key","employeeList","Button","onClick","handleButtonClick","action","actionBy","text","Jumbotron","Home","useState","setOrderBy","setFilterPosBy","getRandomTheme","length","random","Math","floor","positions","index","indexOf","renderFilterPosButtons","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.438190ed.chunk.js","sourcesContent":["const employees = [\r\n  {\r\n    id: 1,\r\n    fname: 'Hermione',\r\n    lname: 'Granger',\r\n    position: 'Information Clerk'\r\n  },\r\n  {\r\n    id: 2,\r\n    fname: 'Harry',\r\n    lname: 'Potter',\r\n    position: 'Information Clerk'\r\n  },\r\n  {\r\n    id: 3,\r\n    fname: 'Ron',\r\n    lname: 'Weasley',\r\n    position: 'Information Clerk'\r\n  },\r\n  {\r\n    id: 4,\r\n    fname: 'Lord',\r\n    lname: 'Voldemort',\r\n    position: 'Records Management Analysis'\r\n  },\r\n  {\r\n    id: 5,\r\n    fname: 'Draco',\r\n    lname: 'Malfoy',\r\n    position: 'Records Management Analysis'\r\n  },\r\n  {\r\n    id: 6,\r\n    fname: 'Severus',\r\n    lname: 'Snape',\r\n    position: 'Records Management Analysis'\r\n  },\r\n  {\r\n    id: 7,\r\n    fname: 'Rubeus',\r\n    lname: 'Hagrid',\r\n    position: 'Data Entry'\r\n  },\r\n  {\r\n    id: 8,\r\n    fname: 'Minerva',\r\n    lname: 'McGonagall',\r\n    position: 'Data Entry'\r\n  },\r\n  {\r\n    id: 9,\r\n    fname: 'Dolores',\r\n    lname: 'Umbridge',\r\n    position: 'Data Entry'\r\n  },\r\n  {\r\n    id: 10,\r\n    fname: 'James',\r\n    lname: 'Potter',\r\n    position: 'Support Specialist'\r\n  },\r\n  {\r\n    id: 11,\r\n    fname: 'Remus',\r\n    lname: 'Lupin',\r\n    position: 'Support Specialist'\r\n  },\r\n  {\r\n    id: 12,\r\n    fname: 'Sirius',\r\n    lname: 'Black',\r\n    position: 'Support Specialist'\r\n  },\r\n  {\r\n    id: 13,\r\n    fname: 'Ginny',\r\n    lname: 'Weasley',\r\n    position: 'Support Assistant'\r\n  },\r\n  {\r\n    id: 14,\r\n    fname: 'Neville',\r\n    lname: 'Longbottom',\r\n    position: 'Support Assistant'\r\n  },\r\n  {\r\n    id: 15,\r\n    fname: 'Luna',\r\n    lname: 'Lovegood',\r\n    position: 'Support Assistant'\r\n  }\r\n];\r\n\r\nexport default employees;","const themes = [\r\n  'primary',\r\n  'success',\r\n  'danger',\r\n  'warning',\r\n];\r\n\r\nexport default themes;","import React from 'react'\r\n\r\nfunction Container(props) {\r\n  return <div className={`container${props.fluid ? '-fluid' : ''}`} {...props} />;\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\n\r\nfunction Row(props) {\r\n  return <div className={`row${props.fluid ? '-fluid' : ''}`} {...props} />;\r\n}\r\n\r\nexport default Row;\r\n","import React from 'react';\r\n\r\nfunction Col(props) {\r\n  const size = props.size.split(' ').map(size => 'col-' + size).join(' ');\r\n  return <div className={size} {...props} />\r\n}\r\n\r\nexport default Col;\r\n","import React from 'react';\r\n\r\nfunction Table(props) {\r\n\r\n  const employeeList = () => {\r\n    const employees = props.employees;\r\n    let filteredEmployees = employees;\r\n\r\n    // Apply filters.\r\n    if (props.filterPosBy !== 'none') {\r\n      filteredEmployees = employees.filter(employee => {\r\n        return employee.position === props.filterPosBy;\r\n      });\r\n    }\r\n\r\n    // Apply sorting.\r\n    filteredEmployees.sort((first, second) => (first[props.orderBy] > second[props.orderBy]) ? 1 : -1);\r\n\r\n    return filteredEmployees.map(employee => (\r\n      <tr key={employee.id}>\r\n        <th scope='row'>{employee.id}</th>\r\n        <td>{employee.fname}</td>\r\n        <td>{employee.lname}</td>\r\n        <td>{employee.position}</td>\r\n      </tr>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <table className={`table table-bordered table-striped table-${props.theme()}`}>\r\n      <thead>\r\n        <tr>\r\n          <th scope='col'>ID</th>\r\n          <th scope='col'>First</th>\r\n          <th scope='col'>Last</th>\r\n          <th scope='col'>Position</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {employeeList()}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from 'react';\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <button \r\n      className={`btn btn-outline-${props.theme} btn-block`} \r\n      onClick={() => props.handleButtonClick(props.action, props.actionBy)}\r\n    >\r\n      {props.text}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nfunction Jumbotron(props) {\r\n  return <div className={`jumbotron ${props.fluid ? 'jumbotron-fluid' : ''}`} {...props}></div>;\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React, { useState } from 'react';\r\nimport employees from '../utils/employees';\r\nimport themes from '../utils/themes';\r\nimport Container from '../components/Container/index';\r\nimport Row from '../components/Row/index';\r\nimport Col from '../components/Col/index';\r\nimport Table from '../components/Table/index';\r\nimport Button from '../components/Button/index';\r\nimport Jumbotron from '../components/Jumbotron/index';\r\nimport '../styles/home.css';\r\n\r\nfunction Home() {\r\n  const [orderBy, setOrderBy] = useState('id');\r\n  const [filterPosBy, setFilterPosBy] = useState('none');\r\n  \r\n  const handleButtonClick = (action, actionBy) => {\r\n    if (action !== 'order' && action !== 'filter') { return };\r\n\r\n    (action === 'order') ? setOrderBy(actionBy) : setFilterPosBy(actionBy);\r\n  };\r\n\r\n  const renderFilterPosButtons = () => {\r\n    const positions = employees.map(employee => employee.position);\r\n    const filteredPositions = positions.filter((position, index) => positions.indexOf(position) === index);\r\n\r\n    let buttons = filteredPositions.map((position, index) => {\r\n      return (\r\n        <Button \r\n          handleButtonClick={handleButtonClick} \r\n          text={position}\r\n          theme={getRandomTheme()}\r\n          action='filter'\r\n          actionBy={position}\r\n          key={index}\r\n        ></Button>\r\n      );\r\n    });\r\n\r\n    return buttons;\r\n  }\r\n\r\n  const getRandomTheme = () => {\r\n    let length = themes.length;\r\n    let random = Math.floor(Math.random() * length);\r\n\r\n    return themes[random];\r\n  }\r\n  \r\n  return(\r\n    <div>\r\n      <Jumbotron fluid='fluid'>\r\n        <Container>\r\n          <h1 className='text-center display-4 rainbow-text'>Employee Directory</h1>\r\n        </Container>\r\n      </Jumbotron>\r\n      <div className='no-jumbo'>\r\n        <Container>\r\n          <Row>\r\n            <Col size='md-6'>\r\n              <h2 className='text-center heading'>Sort</h2>\r\n              <Button handleButtonClick={handleButtonClick} text='ID' theme={getRandomTheme()} action='order' actionBy='id'></Button>\r\n              <Button handleButtonClick={handleButtonClick} text='Position' theme={getRandomTheme()} action='order' actionBy='position'></Button>\r\n              <Button handleButtonClick={handleButtonClick} text='First Name' theme={getRandomTheme()} action='order' actionBy='fname'></Button>\r\n              <Button handleButtonClick={handleButtonClick} text='Last Name' theme={getRandomTheme()} action='order' actionBy='lname'></Button>\r\n            </Col>\r\n            <Col size='md-6'>\r\n              <h2 className='text-center heading'>Filter By Position</h2>\r\n              {renderFilterPosButtons()}\r\n              <Button handleButtonClick={handleButtonClick} text={`No Filter`} theme={getRandomTheme()} action='filter' actionBy='none'></Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n      <Jumbotron>\r\n        <Container fluid='fluid'>\r\n          <Row>\r\n            <Col size='md-12'>\r\n              <Table employees={employees} theme={getRandomTheme} orderBy={orderBy} filterPosBy={filterPosBy}></Table>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Jumbotron>\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}